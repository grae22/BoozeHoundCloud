@model BoozeHoundCloud.Areas.Core.ViewModels.TransactionFormViewModel

@{
  bool isNewTransaction = (Model.Id == 0);
  var formTitle = "";

  if (isNewTransaction)
  {
    formTitle = "New Transaction";
  }
  else
  {
    formTitle = "Edit Transaction";
  }

  ViewBag.Title = formTitle;
}

<h2>@formTitle</h2>

@using (Html.BeginForm("Save", "Transaction"))
{
  <div class="form-group">
    @Html.LabelFor(m => m.Date)
    @Html.TextBox("Date", @Model.Date.ToLocalTime(), "{0:d}", new { @class="form-control" })
    @Html.ValidationMessageFor(m => m.Date)
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.Reference)
    @Html.TextBoxFor(m => m.Reference, new { @class = "form-control" })
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.Description)
    @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.DebitAccountId)
    
    @if (isNewTransaction)
    {
      @Html.DropDownListFor(
        m => m.DebitAccountId,
        new SelectList(
          Model.Accounts,
          "Id",
          "Name"),
        "Select one...",
        new { @class = "form-control", @onchange = "PopulateCreditAccounts()" })
      @Html.ValidationMessageFor(m => m.DebitAccountId)
    }
    else
    {
      @Html.TextBoxFor(
        m => m.Accounts.First(x => x.Id == Model.DebitAccountId).Name,
        new { @class = "form-control", @readonly = "true" } )
    }
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.CreditAccountId)

    @if (isNewTransaction)
    {
      @Html.DropDownListFor(
        m => m.CreditAccountId,
        new SelectList(
          "",
          "Id",
          "Name"),
        "Select one...",
        new { @class = "form-control" })
      @Html.ValidationMessageFor(m => m.CreditAccountId)
    }
    else
    {
      @Html.TextBoxFor(
        m => m.Accounts.First(x => x.Id == Model.CreditAccountId).Name,
        new { @class = "form-control", @readonly = "true" })
    }
  </div>
  <div class="form-group">
    @{
      var valueAttributes = new Dictionary<string, object> { { "class", "form-control" } };

      if (isNewTransaction == false)
      {
        valueAttributes.Add("readonly", "true");
      }
    }

    @Html.LabelFor(m => m.Value);
    @Html.TextBoxFor(m => m.Value, "{0:n2}", valueAttributes )
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.CreatedTimestamp)
    @Html.TextBox("CreatedTimestamp", string.Format("{0:d} {0:T}", @Model.CreatedTimestamp.ToLocalTime()), new { @class = "form-control", @readonly = "true" })
  </div>
  <div class="form-group">
    @Html.LabelFor(m => m.ProcessedTimestamp)
    @Html.TextBox("ProcessedTimestamp", string.Format("{0:d} {0:T}", @Model.ProcessedTimestamp?.ToLocalTime()), new { @class = "form-control", @readonly = "true" })
  </div>

  @Html.HiddenFor(m => m.Id);
  @Html.HiddenFor(m => m.DebitAccountId);
  @Html.HiddenFor(m => m.CreditAccountId);
  @Html.AntiForgeryToken()

  <button type="submit" class="btn btn-primary">Save</button>
  <button type="button" class="btn btn-default" onclick="history.go(-1);">Cancel</button>
}

@section scripts
{
  @Scripts.Render( "~/bundles/jqueryval" )

  <script>
    function PopulateCreditAccounts()
    {
      var debitAccoundId = $('#DebitAccountId').val();

      $.ajax({
        url: '/Api/Core/Account/CanCredit/' + debitAccoundId,
        type: 'GET',
        dataType: 'JSON',
        success: function (accounts)
          {
            $('#CreditAccountId').html('');

            $('#CreditAccountId').append('<option>Select one...</option>');

            $.each(accounts, function (i, account)
              {
                $('#CreditAccountId').append(
                  $('<option></option>').val(account.Id).html(account.Name));
              });
          }
      });
    }
  </script>
}